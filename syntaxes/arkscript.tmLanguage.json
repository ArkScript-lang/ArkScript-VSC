{
	"scopeName": "source.ark",
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ArkScript",
	"patterns": [{"include": "#expression"}],
	"repository": {
		"expression": {
			"patterns": [
				{ "include": "#paren-expression" }, { "include": "#captures" }, { "include": "#keywords" },
				{ "include": "#strings" }, { "include": "#numbers" }, { "include": "#comments" },
				{ "include": "#constants" }
			]
		},
		"paren-expression": {
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": { "0": { "name": "punctuation.paren.open" } },
			"endCaptures": { "0": { "name": "punctuation.paren.close" } },
			"name": "expression.group.ark"
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.ark",
				"match": "\\b(if|while|begin|fun|let|import|set|mut|del|quote) "
			},
			{
				"name": "support.function.list.ark",
				"match": "\\b(append|concat|list|list:reverse|list:find|list:removeAt|list:slice|list:sort|list:fill|list:setAt) "
			},
			{
				"name": "support.function.io.ark",
				"match": "\\b(print|puts|input|io:writeFile|io:readFile|io:fileExists\\?|io:listFiles|io:dir\\?|io:makeDir|io:removeFiles) "
			},
			{
				"name": "support.function.time.ark",
				"match": "\\b(time) "
			},
			{
				"name": "support.function.system.ark",
				"match": "\\b(sys:exec|sys:sleep) "
			},
			{
				"name": "support.function.string.ark",
				"match": "\\b(str:format|str:find|str:removeAt) "
			},
			{
				"name": "support.function.math.ark",
				"match": "\\b(math:exp|math:ln|math:ceil|math:floor|math:round|math:NaN\\?|math:Inf\\?|math:pi|math:e|math:tau|math:Inf|math:NaN|math:cos|math:sin|math:tan|math:arccos|math:arcsin|math:arctan) "
			},
			{
				"name": "keyword.operator.ark",
				"match": "\\b(\\+|\\-|\\*|/|<=|>=|!=|<|>|@=|@|=|\\^|len|empty\\?|firstOf|tailOf|headOf|nil\\?|assert|toNumber|toString|and|or|mod|type|hasField) "
			}]
		},
		"strings": {
			"name": "string.quoted.double.ark",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.ark",
					"match": "\\\\."
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"match": "[a-zA-Z_\u0080-\uDB7F][a-zA-Z0-9_\u0080-\uDB7F\\-?']*",
					"name": "variable.name.ark"
				},
				{
					"match": "(nil)(?=(\\s|\\)|\\]|\\}))",
					"name": "constant.language.nil.ark"
				},
				{
					"match": "(true|false)",
					"name": "constant.language.boolean.ark"
				},
				{
					"match": "((-|\\+)?\\d+(\\.\\d+)?)",
					"name": "constant.numeric.ark"
				}
			]
		},
		"comments": {
			"begin": "#",
			"patterns": [
				{
					"name": "comment.line.content.ark",
					"match": ".*"
				},
				{
					"name": "comment.block.documentation.brief.ark",
					"match": "@brief .*$"
				},
				{
					"name": "comment.block.documentation.details.ark",
					"match": "@details .*$"
				},
				{
					"name": "comment.block.documentation.meta.ark",
					"match": "@meta .*$"
				},
				{
					"name": "comment.block.documentation.code.ark",
					"match": "---$"
				},
				{
					"name": "comment.block.documentation.param.ark",
					"match": "@param .*$"
				},
				{
					"name": "comment.block.documentation.author.ark",
					"match": "@author .*$"
				}
			],
			"end": "$",
			"name": "comment.line.ark"
		},
		"captures": {
			"patterns": [{
				"name": "variable.parameter.ark",
				"match": "&[a-zA-Z_\u0080-\uDB7F][a-zA-Z0-9_\u0080-\uDB7F\\-?']*"
			}]
		}
	}
}